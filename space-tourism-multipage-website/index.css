/* ------------------------------------------------------- */
/* Custom Properties                                       */
/* ------------------------------------------------------- */

:root {
  /* --gap: 5rem; */

  /* Colors */
  --clr-primary: 11 13 23;
  --clr-light: 208 214 249;
  --clr-white: 255 255 255;

  /* Font-sizes (fs-400 = normal) (pixels / 16 to get rem value)*/
  /* Clamp scales the fontsize depending on the values given (Here we have min, middle and max)*/
  /* 8vw + 1rem because viewpoint units wont react zooming in or out */
  --fs-900: clamp(5rem, 9vw + 1rem, 9.375rem);
  --fs-800: 3.5rem;
  --fs-700: 2rem;
  --fs-600: 1.75rem;
  --fs-500: 1.5rem;
  --fs-400: 1rem;
  --fs-300: 0.9375rem;
  --fs-200: 0.875rem;

  /* Font-families */
  --ff-serif: "Bellefair", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Barlow", sans-serif;
}

/* Font-size changes for medium screens */
@media (min-width: 35em) {
  :root {
    --fs-800: 5rem;
    --fs-700: 2.5rem;
    --fs-600: 1.5rem;
    --fs-500: 1.75rem;
    --fs-400: 1.125rem;
    --fs-300: 1rem;
  }
}

/* Font-size changes for big screens */
@media (min-width: 45em) {
  :root {
    --fs-800: 6.25rem;
    --fs-700: 3.5rem;
    --fs-600: 2rem;
  }
}

/* ------------------------------------------------------- */
/* CSS Reset                                               */
/* ------------------------------------------------------- */

/* For CSS reset inspiration */
/* https://piccalil.li/blog/a-modern-css-reset/ */

/* Box sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Margins */

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
picture,
figure {
  margin: 0;
}

/* Font-weight */

h1,
h2,
h3,
h4,
h5,
h6,
p {
 font-weight: 400;
}

/* Body */

body {
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  color: rgb(var(--clr-white));
  line-height: 1.5;
  min-height: 100vh;
  background-color: rgb(var(--clr-primary));

  /* This devides the page in min-content for the 'header' and rest of the space for the 'main' */
  display: grid;
  grid-template-rows: min-content 1fr;
}

/* Images, easier to work with */

img,
picture {
  display: block;
  max-width: 100%;
}

/* Form elements, easier to work with */

input,
button,
section,
textarea {
  font: inherit;
}

/* Animation - off if preferred by user */

@media (prefers-reduced-motion) {
  /* styles to apply if the user's settings are set to reduced motion */
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: smooth !important;
  }
}

/* ------------------------------------------------------- */
/* Utility Classes                                         */
/* ------------------------------------------------------- */

/* General */

.d-block {
  display: block;
}

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.flex-grow {
  flex-grow: 1;
}

/* '* + *' takes all but the first element */
.flow > * + * {
  margin-top: var(--flow-space, 1rem);
  /* border: 1px solid red; */
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.container {
  margin-inline: auto;
  padding-inline: 2em;
  max-width: 80rem;
}

.grid-container {
  display: grid;
}

@media (min-width: 45em) {

  .grid-container {
    grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 40rem)) minmax(2rem, 1fr);
    column-gap: var(--container-gap, 2rem);
  }
  
    /* Only works when wanting to use 2 grid colums in the middle as above*/
  .grid-container > *:first-child {
    grid-column: 2;
  }

  .grid-container > *:last-child {
    grid-column: 3;
  }
}

/* screen readers only class */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  border: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
}

/* Colors */

.bg-dark { background-color: rgb( var(--clr-primary) );}
.bg-light { background-color: rgb( var(--clr-light) );}
.bg-white { background-color: rgb( var(--clr-white) );}

.text-dark { color: rgb( var(--clr-primary) );}
.text-light { color: rgb( var(--clr-light) );}
.text-white { color: rgb( var(--clr-white) );}

/* Typography */

.ff-serif { font-family: var(--ff-serif); } 
.ff-sans-cond { font-family: var(--ff-sans-cond); } 
.ff-sans-normal { font-family: var(--ff-sans-normal); } 

.letter-spacing-1 { letter-spacing: 4.75px; } 
.letter-spacing-2 { letter-spacing: 2.7px; } 
.letter-spacing-3 { letter-spacing: 2.35px; } 

.uppercase { text-transform: uppercase; }

.fs-900 { font-size: var(--fs-900); }
.fs-800 { font-size: var(--fs-800); }
.fs-700 { font-size: var(--fs-700); }
.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
    line-height: 1.1;
}

/* Numbered Titles */

.numbered-title {
  text-transform: uppercase;
  font-family: var(--ff-sans-cond);
  font-size: var(--fs-500);
  letter-spacing: 4.72px;
}

.numbered-title > span {
  color: rgb(var(--clr-white) / .25);
  font-weight: 700;
  margin-right: .5em;
}


/* ------------------------------------------------------- */
/* Components                                              */
/* ------------------------------------------------------- */

/* Large Button  ----------------------------------------- */

.large-button {
  position: relative;
  /* Inline to prevent it from growing (aka displaying as block) */
  display: inline-grid;
  /* Shorthand for align + justify in one*/
  place-items: center;

  border-radius: 100%;
  text-decoration: none;

  /* padding + aspect ratio "acts as height and width" */
  padding: 0 2em;
  aspect-ratio: 1;

  /* Used to force new stacking context */
  z-index: 1;
}

/*
  Placing a element ::after the .large-button. 
  The styles places the element infront of the .large-button's background
  but behind the text content of the .large-button.
  remove z-index: 1 on the .large-button to move it all the way behind
*/
.large-button::after {
  content: "";
  position: absolute;
  z-index: -1;
  border-radius: 50%;
  background-color: rgb(var(--clr-white) / .15);

  /* Matches the size and placement of the .large-button with the position relative */
  width: 100%;
  height: 100%;
 
  /* For transition of opacity and scale on hover */
  opacity: 0;
  transition: opacity linear 250ms, transform ease-in-out 400ms;
}

.large-button:hover::after,
.large-button:focus::after {
  opacity: 1;
  transform: scale(1.5);
}

/* Navigation & Underline-indicators  -------------------------- */

.primary-navigation {
  --gap: 8rem;
  --underline-gap: 2rem;
  list-style: none;
  padding: 0;
  margin: 0;
}

.primary-navigation a {
  text-decoration: none;
}

.primary-navigation a > span {
  font-weight: 700;
  margin-right: .5em;
}

.underline-indicators > * {
  padding: var(--underline-gap, 1rem) 0;
  border: none;
  border-bottom: .2rem solid rgb( var(--clr-white) / 0);
  cursor: pointer;
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
  border-bottom: .2rem solid rgb( var(--clr-light) / .5);
}

.underline-indicators > .active,
.underline-indicators > [aria-selected="true"] {
  border-bottom: .2rem solid rgb( var(--clr-white));
  /* color: rgb(var(--clr-white)); */
}

.tab-list {
  --gap: 2.5rem;
  --underline-gap: 2px;
}

.tab-list > [aria-selected="true"] {
  color: rgb(var(--clr-white));
}

.dot-indicators > *{
  background-color: rgb(var(--clr-white) / .1744);
  border: none;
  border-radius: 100%;
  cursor: pointer;
  aspect-ratio: 1;
  padding: .5em;
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
  background-color: rgb(var(--clr-white) / .5);
}

.dot-indicators > [aria-selected="true"] {
  background-color: rgb(var(--clr-white));
}

.dot-button > * {
  border-radius: 100%;
  cursor: pointer;
  aspect-ratio: 1;
  padding: 0 1.25em;
  border: 1px solid rgb(var(--clr-white) / .25);
}

.dot-button > *:hover,
.dot-button > *:focus {
  border: 1px solid rgb(var(--clr-white))
}

.dot-button > [aria-selected="true"] {
  border: 1px solid rgb(var(--clr-white));
  background-color: rgb(var(--clr-white));
  color: rgb(var(--clr-primary));
}
